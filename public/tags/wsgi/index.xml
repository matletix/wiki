<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Wsgi on My DevOps Notes</title>
    <link>http://localhost:1313/tags/wsgi/</link>
    <description>Recent content in Wsgi on My DevOps Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 28 Feb 2023 20:30:30 +0100</lastBuildDate><atom:link href="http://localhost:1313/tags/wsgi/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Web servers in Python and the WSGI/ASGI protocols</title>
      <link>http://localhost:1313/posts/python/web-servers-wsgi-asgi/</link>
      <pubDate>Tue, 28 Feb 2023 20:30:30 +0100</pubDate>
      
      <guid>http://localhost:1313/posts/python/web-servers-wsgi-asgi/</guid>
      <description>Did you ever wonder how your FastAPI, Flask, or Django app was able to communicate with the HTTP protocol ? And what exactly was the additional component like uWSGI/werkzeug/uvicorn doing to serve your app ?
Then I encourage you to read the following, a step-by-step and in-depth blog series on understanding web servers in Python and the WSGI and ASGI protocols : https://mleue.com/posts/lets-build-our-own-fastapi/</description>
      <content>&lt;p&gt;Did you ever wonder how your FastAPI, Flask, or Django app was able to communicate
with the HTTP protocol ? And what exactly was the additional component like
uWSGI/werkzeug/uvicorn doing to serve your app ?&lt;/p&gt;
&lt;p&gt;Then I encourage you to read the following, a step-by-step and in-depth blog series on
understanding web servers in Python and the &lt;em&gt;WSGI&lt;/em&gt; and &lt;em&gt;ASGI&lt;/em&gt; protocols :
&lt;a href=&#34;https://mleue.com/posts/lets-build-our-own-fastapi/&#34;&gt;https://mleue.com/posts/lets-build-our-own-fastapi/&lt;/a&gt;&lt;/p&gt;
</content>
    </item>
    
  </channel>
</rss>
